import type { Metadata } from "next";
import { Inter } from 'next/font/google'
import "./globals.scss";
import axios from "axios";
import { cookies } from "next/headers";
import { decrypt } from "@/shared/lib";
import { isSession } from "./types";
import { isProfile, Profile, ProfileProvider } from "@/shared";


const inter = Inter({
  subsets: ['latin'],
  weight: ['400', '500', '600'],
  display: 'swap',
  variable: '--font-inter',
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  icons: {
    icon: '/favicon.svg'
  }
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let profile: Profile | null = null;
  const parsed = await decrypt(cookies().get("sessionId")?.value || "");
  
  if (parsed?.sessionId && typeof parsed?.sessionId === "string") {
    const session = JSON.parse(parsed.sessionId);
    const url = process.env.AUTH_SERVER_URL || '';

    if (isSession(session) && url) {
      try {
        const {data} = await axios(url, {
          method: "post",
          headers: {
            Authorization: `Bearer ${session.access_token}`,
            accept: 'application/json',
            "Content-Type": "application/json",
          },
          data: JSON.stringify({query: `{ myProfile { id email password name role avatar creationAt updatedAt } }`}),
        });

        if (isProfile(data?.data.myProfile)) {
          profile = data?.data.myProfile;
          
        }
      } catch(err) {
        console.log(err);
      }
    }
  }

  return (
    <html lang="en">
      <body
        className={`${inter.variable} min-h-screen font-sans antialiased`}
      >
        <ProfileProvider profile={profile}>
          <div className="themes-wrapper bg-[#F0F3F8] w-full min-h-screen flex items-center justify-center">
            {children}
          </div>
        </ProfileProvider>
      </body>
    </html>
  );
}
